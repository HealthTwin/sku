from datetime import datetime

from django.db import models

from accounts.models import CustomUser


class ProductsStore(models.Model):
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    barcode = models.CharField(max_length=200, null=True, blank=True)
    pbarcode = models.CharField(max_length=200, null=True, blank=True)
    product_title = models.TextField(null=True, blank=True)
    sku = models.CharField(max_length=50, null=True, blank=True)
    partner_sku = models.CharField(max_length=200, null=True, blank=True)
    brand = models.CharField(max_length=200, null=True, blank=True)
    family = models.CharField(max_length=200, null=True, blank=True)
    wh = models.CharField(max_length=200, null=True, blank=True)
    country_code = models.CharField(max_length=200, null=True, blank=True)
    qty = models.IntegerField(null=True, blank=True)
    saleable = models.IntegerField(null=True, blank=True)
    live_saleable = models.IntegerField(null=True, blank=True)
    not_live_saleable = models.IntegerField(null=True, blank=True)
    non_saleable = models.BooleanField(null=True, blank=True)
    non_saleable_damaged = models.BooleanField(null=True, blank=True)
    non_saleable_expired = models.BooleanField(null=True, blank=True)
    non_saleable_mislabel = models.BooleanField(null=True, blank=True)
    non_saleable_others = models.BooleanField(null=True, blank=True)
    close_date = models.DateField(null=True, blank=True)


class SalesItems(models.Model):
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    item_nr = models.CharField(max_length=200, null=True, blank=True)
    partner_sku = models.CharField(max_length=200, null=True, blank=True)
    sku_config = models.CharField(max_length=200, null=True, blank=True)
    sku = models.CharField(max_length=200, null=True, blank=True)
    family = models.CharField(max_length=200, null=True, blank=True)
    product_type = models.CharField(max_length=200, null=True, blank=True)
    brand = models.CharField(max_length=200, null=True, blank=True)
    product_title = models.TextField(null=True, blank=True)
    partner_barcodes = models.CharField(max_length=200, null=True, blank=True)
    city_from = models.CharField(max_length=200, null=True, blank=True)
    city_to = models.CharField(max_length=200, null=True, blank=True)
    country_code = models.CharField(max_length=200, null=True, blank=True)
    item_status = models.CharField(max_length=200, null=True, blank=True)
    is_fbn = models.BooleanField(null=True, blank=True)
    commission_type = models.CharField(max_length=200, null=True, blank=True)
    sla_type = models.CharField(max_length=200, null=True, blank=True)
    ordered_date = models.DateField(null=True, blank=True)
    shipped_date = models.DateField(null=True, blank=True)
    delivered_date = models.DateField(null=True, blank=True)
    returned_date = models.DateField(null=True, blank=True)
    return_ndr_due_date = models.DateField(null=True, blank=True)
    return_cir_due_date = models.DateField(null=True, blank=True)
    currency_code = models.CharField(max_length=200, null=True, blank=True)
    base_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    seller_promo = models.BooleanField(null=True, blank=True)
    seller_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    noon_markup = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    promo_deal = models.BooleanField(null=True, blank=True)
    offer_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    promo_coupon = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    indirect_vat = models.BooleanField(null=True, blank=True)
    invoice_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_commission = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_closing = models.BooleanField(null=True, blank=True)
    fee_noon_promo = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_noon_markup = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_adjustments = models.BooleanField(null=True, blank=True)
    fee_crossborder_vat = models.BooleanField(null=True, blank=True)
    fee_vat_deducted_at_source = models.BooleanField(null=True, blank=True)
    fee_noon_penalty = models.BooleanField(null=True, blank=True)
    fee_direct_collection = models.BooleanField(null=True, blank=True)
    fee_crossdock = models.BooleanField(null=True, blank=True)
    fee_reinvoicing = models.BooleanField(null=True, blank=True)
    fee_damaged_return = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_weight_handling = models.BooleanField(null=True, blank=True)
    fee_outbound_fbn = models.BooleanField(null=True, blank=True)
    fee_outbound_fbn_v2 = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    fee_outbound_directship = models.BooleanField(null=True, blank=True)
    payment_due = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    payment_statement_total = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    payment_pending = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    invoice_nr = models.CharField(max_length=200, null=True, blank=True)
    creditnote_nr = models.CharField(max_length=200, null=True, blank=True)
    statement_nrs = models.CharField(max_length=200, null=True, blank=True)
    fx_rate_payment = models.BooleanField(null=True, blank=True)

    def __str__(self):
        return self.item_nr


class ProductStatus(models.Model):
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    partner_sku = models.CharField(max_length=200, null=True, blank=True)
    sku_config = models.CharField(max_length=200, null=True, blank=True)
    sku = models.CharField(max_length=200, null=True, blank=True)
    family = models.CharField(max_length=200, null=True, blank=True)
    product_type = models.CharField(max_length=200, null=True, blank=True)
    brand = models.CharField(max_length=200, null=True, blank=True)
    product_title = models.CharField(max_length=500, null=True, blank=True)
    country_code = models.CharField(max_length=200, null=True, blank=True)
    recommended_action = models.CharField(max_length=200, null=True, blank=True)
    live_mp = models.CharField(max_length=200, null=True, blank=True)
    current_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    platform_recommended_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    current_fbn_stock = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    current_b2b_stock = models.BooleanField(null=True, blank=True)
    days_of_coverage = models.CharField(max_length=200, null=True, blank=True)
    b2b_processing_days = models.CharField(max_length=200, null=True, blank=True)
    lowest_processing_days = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    lowest_mp_fbn_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    lowest_mp_b2b_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    external_competition_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    average_sku_selling_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    your_visitors_15_days = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    revenue_shipped_15_days = models.BooleanField(null=True, blank=True)
    shipped_units_15_days = models.BooleanField(null=True, blank=True)


class ProductLiveNotLibe(models.Model):
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    psku_code = models.CharField(max_length=200, null=True, blank=True)
    country_code = models.CharField(max_length=200, null=True, blank=True)
    id_partner = models.IntegerField(null=True, blank=True)
    partner_sku = models.CharField(max_length=200, null=True, blank=True)
    partner_barcodes = models.CharField(max_length=200, null=True, blank=True)
    sku_child = models.CharField(max_length=200, null=True, blank=True)
    noon_title = models.CharField(max_length=500, null=True, blank=True)
    noon_brand = models.CharField(max_length=200, null=True, blank=True)
    active_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    msrp = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    sale_price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    noon_price_min = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    noon_price_max = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    seller_price_min = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    seller_price_max = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    price_engine_min = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    price_engine_max = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    sale_start_date = models.DateField(null=True, blank=True)
    sale_end_date = models.DateField(null=True, blank=True)
    is_active = models.BooleanField(null=True, blank=True)
    warranty = models.CharField(max_length=200, null=True, blank=True)
    stock_fbn_net = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True)
    stock_xdock_gross = models.CharField(max_length=200, null=True, blank=True)
    stock_xdock_net = models.CharField(max_length=200, null=True, blank=True)
    mp_code = models.CharField(max_length=200, null=True, blank=True)
    offer_status_reason = models.CharField(max_length=500, null=True, blank=True)
    noon_status = models.CharField(max_length=200, null=True, blank=True)
    image_path = models.CharField(max_length=500, null=True, blank=True)


class UploadedFiles(models.Model):
    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE)
    type_main = models.CharField(max_length=100, null=True, blank=True)
    type_file = models.CharField(max_length=100, null=True, blank=True)
    date_upload = models.DateTimeField(default=datetime.now(), null=True, blank=True)
    state_file = models.CharField(max_length=100, null=True, blank=True)
    stat_message = models.CharField(max_length=500, null=True, blank=True)







